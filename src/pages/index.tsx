import { ShoppingItem } from "@prisma/client";
import { type NextPage } from "next";
import Head from "next/head";
import Link from "next/link";
import { useState } from "react";
import { ItemModal } from "../components/ItemModal";
import { HiX } from "react-icons/hi";
import { motion } from "framer-motion";

import { trpc } from "../utils/trpc";

const Home: NextPage = () => {
  // const hello = trpc.example.hello.useQuery({ text: "from tRPC" });
  // console.log(hello);
  const [items, setItems] = useState<ShoppingItem[]>([]);
  const [checkedItems, setCheckedItems] = useState<ShoppingItem[]>([]);
  const [modalOpen, setModalOpen] = useState<boolean>(false);
  const { data: itemsData, isLoading } = trpc.item.getAllItems.useQuery(
    undefined,
    {
      onSuccess: (shoppingItems) => {
        setItems(shoppingItems);
        const checked = shoppingItems.filter((item) => item.checked);
        setCheckedItems(checked);
      },
    }
  );

  const { mutate: deleteItem } = trpc.item.deleteItem.useMutation({
    onSuccess: (shoppingItem) => {
      setItems((prev) => prev.filter((item) => item.id !== shoppingItem.id));
    },
  });

  const { mutate: toggleChecked } = trpc.item.toggleChecked.useMutation({
    onSuccess: (shoppingItem) => {
      if (shoppingItem.checked) {
        setCheckedItems((prev) => [...prev, shoppingItem]);
      } else {
        setCheckedItems((prev) =>
          prev.filter((item) => item.id === shoppingItem.id)
        );
      }
    },
  });

  if (!itemsData || isLoading) return <p>Loading...</p>;

  return (
    <>
      <Head>
        <title>Shopping List</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {modalOpen && (
        <ItemModal setModalOpen={setModalOpen} setItems={setItems} />
      )}

      <main className="mx-auto my-12 max-w-3xl">
        <div className="flex justify-between">
          <h2 className="text-2xl font-semibold">Shopping List</h2>
          <button
            type="button"
            onClick={() => setModalOpen(true)}
            className="rounded-md bg-violet-600 p-2 text-white transition hover:bg-violet-500"
          >
            Add Shopping Item
          </button>
        </div>
        <ul className="mt-4">
          {items.map((item) => {
            const { id, name, checked } = item;

            return (
              <li key={id} className="flex items-center justify-between">
                <div className="relative">
                  {item.checked && (
                    <div className="pointer-events-none absolute inset-0 bg-red-500/50 p-2"></div>
                  )}
                  <span
                    onClick={() =>
                      toggleChecked({
                        id,
                        checked: !checked,
                      })
                    }
                  >
                    {name}
                  </span>
                </div>
                <HiX
                  onClick={() => deleteItem({ id })}
                  className="cursor-pointer text-lg text-red-500"
                />
              </li>
            );
          })}
        </ul>
      </main>
    </>
  );
};

export default Home;
